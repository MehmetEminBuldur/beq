/**
 * Drag System CSS Styles
 * 
 * Visual feedback and styling for drag operations
 */

/* Global drag states */
.dragging-in-progress {
  cursor: grabbing !important;
  user-select: none;
}

.dragging-in-progress * {
  cursor: grabbing !important;
}

/* Draggable objects */
.draggable-schedule-object {
  position: relative;
  transition: all 0.2s ease;
  touch-action: none;
}

.draggable-schedule-object:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.draggable-schedule-object:active {
  transform: scale(0.98);
}

.draggable-schedule-object.dragging {
  z-index: 1000;
  transform: scale(1.05);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
  transition: none;
}

/* Drag handle */
.drag-handle {
  opacity: 0;
  transition: opacity 0.2s ease;
  cursor: grab;
}

.draggable-schedule-object:hover .drag-handle {
  opacity: 1;
}

.drag-handle:active {
  cursor: grabbing;
}

/* Ghost element */
.dragging-ghost {
  pointer-events: none !important;
  z-index: 9999 !important;
  opacity: 0.8 !important;
  transform: scale(1.05) !important;
  transition: none !important;
  filter: drop-shadow(0 10px 20px rgba(0, 0, 0, 0.3)) !important;
  border: 2px dashed rgba(59, 130, 246, 0.5) !important;
}

.dragging-ghost * {
  pointer-events: none !important;
}

/* Drop targets */
[data-drop-target] {
  position: relative;
  transition: all 0.2s ease;
}

.drop-target-highlight {
  position: relative;
  z-index: 10;
}

.drop-target-highlight::before {
  content: '';
  position: absolute;
  inset: 0;
  border: 2px solid;
  border-radius: 4px;
  pointer-events: none;
  transition: all 0.2s ease;
}

.drop-target-valid::before {
  border-color: #10b981;
  background-color: rgba(16, 185, 129, 0.1);
  box-shadow: 0 0 0 4px rgba(16, 185, 129, 0.2);
}

.drop-target-invalid::before {
  border-color: #ef4444;
  background-color: rgba(239, 68, 68, 0.1);
  box-shadow: 0 0 0 4px rgba(239, 68, 68, 0.2);
}

/* Drop target feedback indicators */
.drop-target-valid::after {
  content: '✓';
  position: absolute;
  top: 4px;
  right: 4px;
  width: 20px;
  height: 20px;
  background-color: #10b981;
  color: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 12px;
  font-weight: bold;
  z-index: 11;
}

.drop-target-invalid::after {
  content: '✗';
  position: absolute;
  top: 4px;
  right: 4px;
  width: 20px;
  height: 20px;
  background-color: #ef4444;
  color: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 12px;
  font-weight: bold;
  z-index: 11;
}

/* Brick-specific styles */
.brick-object {
  background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);
  border-left: 4px solid #6b7280;
}

.brick-object.completed {
  background: linear-gradient(135deg, #ecfdf5 0%, #d1fae5 100%);
  border-left-color: #10b981;
}

.brick-object.in_progress {
  background: linear-gradient(135deg, #fffbeb 0%, #fef3c7 100%);
  border-left-color: #f59e0b;
}

.brick-object.pending {
  background: linear-gradient(135deg, #eff6ff 0%, #dbeafe 100%);
  border-left-color: #3b82f6;
}

.brick-object.overdue {
  background: linear-gradient(135deg, #fef2f2 0%, #fecaca 100%);
  border-left-color: #ef4444;
  animation: pulse-warning 2s infinite;
}

/* Quanta-specific styles */
.quanta-object {
  background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
  border: 2px solid #cbd5e1;
}

.quanta-object.completed {
  background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%);
  border-color: #22c55e;
}

.quanta-object.in_progress {
  background: linear-gradient(135deg, #fefce8 0%, #fef08a 100%);
  border-color: #eab308;
}

.quanta-object.pending {
  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
  border-color: #0ea5e9;
}

.quanta-object.quick-task {
  border-style: dashed;
  border-width: 2px;
}

.quanta-object.focus-time {
  box-shadow: 0 0 0 2px rgba(168, 85, 247, 0.3);
}

/* Energy level indicators */
.energy-high {
  border-left: 4px solid #ef4444;
}

.energy-medium {
  border-left: 4px solid #f59e0b;
}

.energy-low {
  border-left: 4px solid #10b981;
}

/* Keyboard drag indicators */
.keyboard-dragging {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
  box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.2);
}

.keyboard-drag-instructions {
  position: absolute;
  top: -40px;
  left: 50%;
  transform: translateX(-50%);
  background: #1f2937;
  color: white;
  padding: 8px 12px;
  border-radius: 6px;
  font-size: 12px;
  white-space: nowrap;
  z-index: 1000;
}

.keyboard-drag-instructions::after {
  content: '';
  position: absolute;
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
  border: 6px solid transparent;
  border-top-color: #1f2937;
}

/* Animation keyframes */
@keyframes pulse-warning {
  0%, 100% {
    box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.4);
  }
  50% {
    box-shadow: 0 0 0 8px rgba(239, 68, 68, 0);
  }
}

@keyframes drag-preview {
  0% {
    transform: scale(1) rotate(0deg);
  }
  50% {
    transform: scale(1.05) rotate(1deg);
  }
  100% {
    transform: scale(1) rotate(0deg);
  }
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
  .brick-object {
    background: linear-gradient(135deg, #374151 0%, #1f2937 100%);
  }

  .brick-object.completed {
    background: linear-gradient(135deg, #064e3b 0%, #022c22 100%);
  }

  .brick-object.in_progress {
    background: linear-gradient(135deg, #78350f 0%, #451a03 100%);
  }

  .brick-object.pending {
    background: linear-gradient(135deg, #1e3a8a 0%, #1e1b4b 100%);
  }

  .quanta-object {
    background: linear-gradient(135deg, #475569 0%, #334155 100%);
  }

  .quanta-object.completed {
    background: linear-gradient(135deg, #065f46 0%, #022c22 100%);
  }

  .quanta-object.in_progress {
    background: linear-gradient(135deg, #92400e 0%, #451a03 100%);
  }

  .quanta-object.pending {
    background: linear-gradient(135deg, #1e40af 0%, #1e1b4b 100%);
  }

  .keyboard-drag-instructions {
    background: #f9fafb;
    color: #111827;
  }

  .keyboard-drag-instructions::after {
    border-top-color: #f9fafb;
  }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .draggable-schedule-object {
    min-width: 120px;
    padding: 8px;
  }

  .drag-handle {
    opacity: 1; /* Always visible on mobile */
  }

  .drop-target-valid::after,
  .drop-target-invalid::after {
    width: 16px;
    height: 16px;
    font-size: 10px;
  }

  .keyboard-drag-instructions {
    font-size: 10px;
    padding: 6px 8px;
  }
}

/* Accessibility improvements */
@media (prefers-reduced-motion: reduce) {
  .draggable-schedule-object,
  .drop-target-highlight,
  [data-drop-target] {
    transition: none;
  }

  .brick-object.overdue {
    animation: none;
  }
}

/* Focus indicators for keyboard navigation */
.draggable-schedule-object:focus {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

.draggable-schedule-object:focus:not(:focus-visible) {
  outline: none;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .drop-target-valid::before {
    border-width: 3px;
  }

  .drop-target-invalid::before {
    border-width: 3px;
  }

  .draggable-schedule-object.dragging {
    border: 3px solid currentColor;
  }
}

/* Print styles */
@media print {
  .dragging-ghost,
  .drop-target-highlight::before,
  .drop-target-valid::after,
  .drop-target-invalid::after,
  .keyboard-drag-instructions {
    display: none !important;
  }

  .draggable-schedule-object {
    break-inside: avoid;
  }
}
